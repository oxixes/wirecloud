name: Docker CI/CD

# Controls when the workflow will run
on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - '*'
  release:
    types: [published]

  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v4

      # Generate docker tags
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: fiware/wirecloud

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build amd64 to test
        uses: docker/build-push-action@v5
        with: 
          context: .
          platforms: linux/amd64
          tags: fiware/wirecloud:latest
          load: true #Load into docker daemon to test
          cache-from: type=registry,ref=ghcr.io/dmunozv04/isponsorblocktv:buildcache
      
      - name: Setup python to test
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      
      - name: Install dependencies to test
        run: |
          sudo pip install sh requests

      - name: Run tests
        run: |
          cd docker-platform
          sudo python tests.py

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}